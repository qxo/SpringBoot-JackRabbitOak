/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
	id 'com.adarshr.test-logger' version '2.1.0'
}

repositories {
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'javax.jcr:jcr:2.0'
    implementation 'org.apache.jackrabbit:oak-jcr:1.34.0'
    implementation 'org.apache.jackrabbit:oak-core:1.34.0'
    implementation 'org.apache.jackrabbit:oak-segment-tar:1.34.0'
    implementation 'org.apache.jackrabbit:oak-store-document:1.10.4'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE'
    implementation 'org.apache.tomcat:tomcat-jdbc:9.0.38'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.3.4.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.21'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.4.RELEASE'
	testImplementation("org.junit.jupiter:junit-jupiter:5.6.2")
	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    //compileOnly 'javax.servlet:javax.servlet-api:3.0.1'
	runtimeOnly 'com.h2database:h2:1.4.200'
}

group = 'com.jackrabbit'
version = '0.0.1-SNAPSHOT'
description = 'spring-boot-jackrabbit-oak'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
//
//testlogger {
//	// pick a theme - mocha, standard, plain, mocha-parallel, standard-parallel or plain-parallel
//	theme 'standard'
//
//	// set to false to disable detailed failure logs
//	showExceptions true
//
//	// set to false to hide stack traces
//	showStackTraces true
//
//	// set to true to remove any filtering applied to stack traces
//	showFullStackTraces false
//
//	// set to false to hide exception causes
//	showCauses true
//
//	// set threshold in milliseconds to highlight slow tests
//	slowThreshold 2000
//
//	// displays a breakdown of passes, failures and skips along with total duration
//	showSummary true
//
//	// set to true to see simple class names
//	showSimpleNames false
//
//	// set to false to hide passed tests
//	showPassed true
//
//	// set to false to hide skipped tests
//	showSkipped true
//
//	// set to false to hide failed tests
//	showFailed true
//
//	// enable to see standard out and error streams inline with the test results
//	showStandardStreams false
//
//	// set to false to hide passed standard out and error streams
//	showPassedStandardStreams true
//
//	// set to false to hide skipped standard out and error streams
//	showSkippedStandardStreams true
//
//	// set to false to hide failed standard out and error streams
//	showFailedStandardStreams true
//}

testlogger {
	theme 'mocha' // standard standard-parallel mocha project level
	slowThreshold 1000
}

test {
	testlogger {
		//theme 'standard-parallel' // task level
		showFullStackTraces true
	}
	useJUnitPlatform()
	failFast = true
    //testLogging.showStandardStreams = true
	//testLogging.exceptionFormat = 'full'
	outputs.upToDateWhen { false }
//	testLogging {
//		//events = ["passed", "failed", "skipped"]
//		events "passed", "skipped", "failed"
//		showStandardStreams = true
//		info.events = ["passed", "failed", "skipped"]
//	}
}

